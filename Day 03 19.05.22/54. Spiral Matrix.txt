class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int m=matrix.size();
        int n=matrix[0].size();
        int cstart=0,cend=n-1,rstart=1,rend=m-1;
        int c=0,r=0,count=0,ci=1,ri=0;
        vector<int> v;
        while(!(count==m*n))
        {
            v.push_back(matrix[r][c]);
            count+=1;
            if(c==cstart && r>(m/2) && m%2==1) ri=1,ci=0,cstart+=1;
            else if(c==cend && r<=(m/2) && m%2==1) ri=1,ci=0,cend-=1;
            else if(c==cstart && r>=(m/2) && m%2==0) ri=1,ci=0,cstart+=1;
            else if(c==cend && r<(m/2) && m%2==0) ri=1,ci=0,cend-=1;
            else if(r==rstart && c<(n/2)) ri=0,ci=1,rstart+=1;
            else if(r==rend && c>=(n/2)) ri=0,ci=1,rend-=1;
            
            if(ci==1)
            {
                if(r<=(m/2) && m%2==1)
                    c++;
                else if(r>m/2 && m%2==1)
                    c--;
                else if(r<(m/2) && m%2==0)
                    c++;
                else if(r>=m/2 && m%2==0)
                    c--;
            }
            else if(ri==1)
            {
                if(c>=(n/2) )
                    r++;
                else
                    r--;
            }
            
        }
        return v;
    }
};