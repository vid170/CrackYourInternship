class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        int prev=100001; int dupl=100001,duph=100001,n=nums.size();
        sort(nums.begin(),nums.end()); int target;
        vector<vector<int>> v;
        vector<int> v2;
        v2.push_back(100001);
        v2.push_back(100001);
        v2.push_back(100001);
        for(int i=0;i<n;i++)
        {
            
            if(nums[i]!=prev)
            {
                target=-nums[i];
                dupl=100001,duph=100001;
                int l=i+1,h=n-1;
                while(l<h)
                {
                    if((nums[l]+nums[h])>target)
                        h-=1;
                    else if((nums[l]+nums[h])<target)
                        l+=1;
                    else
                    {
                        if(nums[l]!=duph && nums[h]!=duph && nums[l]!=dupl && nums[h]!=dupl)
                        {
                        v2[0]=nums[i],v2[1]=nums[l],v2[2]=nums[h];
                        v.push_back(v2);
                        duph=nums[h];
                        dupl=nums[l];
                        }
                        l+=1,h-=1;
                    }
                }
                
            }
              prev=nums[i];
            
        }
        return v;
        
    }
};